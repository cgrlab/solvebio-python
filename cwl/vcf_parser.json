{
  "sbg:id": "vcf-parser",
  "id": "#vcf-parser",
  "inputs": [
    {
      "type": ["null", "File"],
      "label": "vcf",
      "description": ".vcf or .vcf.gz",
      "streamable": false,
      "default": "",
      "id": "#vcf",
      "inputBinding": {
        "position": 1,
        "separate": true,
        "sbg:cmdInclude": true
      },
      "required": false
    }
  ],
  "outputs": [
    {
      "type": ["null", "File"],
      "label": "json",
      "description": "vcf converted to json",
      "streamable": false,
      "default": "",
      "id": "#json",
      "outputBinding": {
        "glob": {
          "engine": "#cwl-js-engine",
          "script": "\"*.vcf.json.gz\"",
          "class": "Expression"
        },
        "sbg:inheritMetadataFrom": "#vcf",
        "sbg:metadata": {
          "tool_created_by": "vcf_parser"
        }
      }
    }
  ],
  "requirements": [],
  "hints": [
    {
      "class": "DockerRequirement",
      "dockerPull": "cgrlab/solvebio-python:latest"
    },
    {
      "class": "sbg:CPURequirement",
      "value": 1
    },
    {
      "class": "sbg:MemRequirement",
      "value": 1000
    }
  ],
  "label": "VCF Parser",
  "class": "CommandLineTool",
  "baseCommand": [
    "python /opt/solvebio-python/solvebio/contrib/vcf_parser/vcf_parser.py"
  ],
  "arguments": [
    {
      "position": 101,
      "prefix": ">",
      "separate": true,
      "valueFrom": {
        "engine": "#cwl-js-engine",
        "script": "{var name = $job.inputs.vcf.name.split(\".vcf\")[0]; return name + \".vcf.json\"}",
        "class": "Expression"
      }
    },
    {
      "position": 102,
      "prefix": "&&",
      "separate": true,
      "valueFrom": {
        "engine": "#cwl-js-engine",
        "script": "{\nvar name = $job.inputs.vcf.name.split(\".vcf\")[0]; return \"gzip \" + name + \".vcf.json\"}",
        "class": "Expression"
      }
    },
    {
      "position": 199,
      "separate": true,
      "valueFrom": {
        "engine": "#cwl-js-engine",
        "script": "\"&& ls -lhrt\"",
        "class": "Expression"
      }
    }
  ],
  "stdout": "std.out"
}
